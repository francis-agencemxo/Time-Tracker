{"version":3,"file":"projectNames.js","sourceRoot":"","sources":["../src/projectNames.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,4DAqCC;AAED,8DA4BC;AAjFD,+CAAiC;AACjC,2CAA6B;AAC7B,iDAAyC;AAGzC,SAAS,eAAe,CAAC,SAAiB;IACxC,MAAM,SAAS,GAAG,SAAS;SACxB,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;SACpB,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;SAC3B,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACzB,MAAM,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACtC,OAAO,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC;AACpD,CAAC;AAED,SAAgB,wBAAwB,CACtC,QAAoB,EACpB,MAA4B;IAE5B,QAAQ,MAAM,CAAC,mBAAmB,EAAE,CAAC;QACnC,KAAK,QAAQ,CAAC,CAAC,CAAC;YACd,MAAM,MAAM,GAAG,MAAM,CAAC,iBAAiB,EAAE,IAAI,EAAE,CAAC;YAChD,IAAI,MAAM,EAAE,CAAC;gBACX,OAAO,MAAM,CAAC;YAChB,CAAC;YACD,MAAM;QACR,CAAC;QACD,KAAK,WAAW,CAAC,CAAC,CAAC;YACjB,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAC7D,IAAI,MAAM,EAAE,CAAC;gBACX,MAAM,QAAQ,GAAG,yBAAyB,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBACtE,IAAI,QAAQ,EAAE,CAAC;oBACb,OAAO,QAAQ,CAAC;gBAClB,CAAC;YACH,CAAC;YACD,MAAM;QACR,CAAC;QACD,KAAK,iBAAiB,CAAC;QACvB;YACE,MAAM;IACV,CAAC;IAED,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IAC7D,IAAI,MAAM,EAAE,CAAC;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,IAAI,MAAM,CAAC,SAAS,CAAC,gBAAgB,EAAE,MAAM,EAAE,CAAC;QAC9C,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACxE,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAgB,yBAAyB,CACvC,MAAc,EACd,MAA4B;IAE5B,IAAI,MAAM,CAAC,mBAAmB,KAAK,QAAQ,EAAE,CAAC;QAC5C,MAAM,MAAM,GAAG,MAAM,CAAC,iBAAiB,EAAE,IAAI,EAAE,CAAC;QAChD,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,MAAM,CAAC;QAChB,CAAC;IACH,CAAC;IAED,IAAI,MAAM,CAAC,mBAAmB,KAAK,WAAW,EAAE,CAAC;QAC/C,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,IAAA,wBAAQ,EAAC,oCAAoC,EAAE;gBAC5D,GAAG,EAAE,MAAM;gBACX,KAAK,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC;aACpC,CAAC;iBACC,QAAQ,EAAE;iBACV,IAAI,EAAE,CAAC;YACV,IAAI,MAAM,EAAE,CAAC;gBACX,OAAO,eAAe,CAAC,MAAM,CAAC,CAAC;YACjC,CAAC;QACH,CAAC;QAAC,MAAM,CAAC;YACP,SAAS;QACX,CAAC;IACH,CAAC;IAED,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC/B,CAAC","sourcesContent":["import * as vscode from \"vscode\";\nimport * as path from \"path\";\nimport { execSync } from \"child_process\";\nimport { TrackerConfiguration } from \"./config\";\n\nfunction extractRepoName(remoteUrl: string): string {\n  const sanitized = remoteUrl\n    .replace(/^git@/, \"\")\n    .replace(/^https?:\\/\\//, \"\")\n    .replace(/\\.git$/, \"\");\n  const segments = sanitized.split(\"/\");\n  return segments[segments.length - 1] || sanitized;\n}\n\nexport function deriveProjectNameFromUri(\n  resource: vscode.Uri,\n  config: TrackerConfiguration,\n): string | null {\n  switch (config.projectNameStrategy) {\n    case \"custom\": {\n      const custom = config.customProjectName?.trim();\n      if (custom) {\n        return custom;\n      }\n      break;\n    }\n    case \"gitOrigin\": {\n      const folder = vscode.workspace.getWorkspaceFolder(resource);\n      if (folder) {\n        const repoName = deriveProjectNameFromPath(folder.uri.fsPath, config);\n        if (repoName) {\n          return repoName;\n        }\n      }\n      break;\n    }\n    case \"workspaceFolder\":\n    default:\n      break;\n  }\n\n  const folder = vscode.workspace.getWorkspaceFolder(resource);\n  if (folder) {\n    return path.basename(folder.uri.fsPath);\n  }\n\n  if (vscode.workspace.workspaceFolders?.length) {\n    return path.basename(vscode.workspace.workspaceFolders[0].uri.fsPath);\n  }\n\n  return null;\n}\n\nexport function deriveProjectNameFromPath(\n  fsPath: string,\n  config: TrackerConfiguration,\n): string | null {\n  if (config.projectNameStrategy === \"custom\") {\n    const custom = config.customProjectName?.trim();\n    if (custom) {\n      return custom;\n    }\n  }\n\n  if (config.projectNameStrategy === \"gitOrigin\") {\n    try {\n      const output = execSync(\"git config --get remote.origin.url\", {\n        cwd: fsPath,\n        stdio: [\"ignore\", \"pipe\", \"ignore\"],\n      })\n        .toString()\n        .trim();\n      if (output) {\n        return extractRepoName(output);\n      }\n    } catch {\n      // ignore\n    }\n  }\n\n  return path.basename(fsPath);\n}\n"]}