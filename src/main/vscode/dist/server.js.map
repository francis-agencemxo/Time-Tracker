{"version":3,"file":"server.js","sourceRoot":"","sources":["../src/server.ts"],"names":[],"mappings":"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","sourcesContent":["import * as http from \"http\";\nimport express, { Request, Response } from \"express\";\nimport cors from \"cors\";\nimport bodyParser from \"body-parser\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport * as vscode from \"vscode\";\nimport { DatabaseManager } from \"./database\";\nimport { LicenseStore } from \"./licenseStore\";\nimport { TrackerConfiguration } from \"./config\";\n\n\n\ntype SessionsByProject = {\n  duration: number;\n  sessions: Array<{\n    start: string;\n    end: string;\n    type: string;\n    file?: string | null;\n    host?: string | null;\n    url?: string | null;\n  }>;\n};\n\ntype DashboardStats = Record<string, Record<string, SessionsByProject>>;\n\nexport class TrackerServer {\n  private app: express.Express | null = null;\n  private server: http.Server | null = null;\n  private currentPort: number | null = null;\n  private staticRoot: string | null = null;\n  private config: TrackerConfiguration;\n\n  constructor(\n    private readonly database: DatabaseManager,\n    private readonly licenseStore: LicenseStore,\n    config: TrackerConfiguration,\n  ) {\n    this.config = config;\n  }\n\n  async start(port: number, staticRoot: string): Promise<void> {\n    if (this.server && this.currentPort === port) {\n      return;\n    }\n\n    await this.stop();\n\n    this.app = express();\n    this.staticRoot = staticRoot;\n    this.currentPort = port;\n\n    this.configureMiddleware();\n    this.configureRoutes();\n\n    await new Promise<void>((resolve) => {\n      this.server = this.app!.listen(port, () => {\n        console.log(`CodePulse tracker server listening on port ${port}`);\n        resolve();\n      });\n    });\n  }\n\n  async stop(): Promise<void> {\n    if (this.server) {\n      await new Promise<void>((resolve, reject) => {\n        this.server!.close((err) => (err ? reject(err) : resolve()));\n      }).catch((error) => {\n        console.warn(\"CodePulse: failed to stop tracker server\", error);\n      });\n    }\n    this.server = null;\n    this.app = null;\n    this.currentPort = null;\n  }\n\n  async restart(port: number, staticRoot: string): Promise<void> {\n    await this.start(port, staticRoot);\n  }\n\n  updateConfiguration(config: TrackerConfiguration): void {\n    this.config = config;\n  }\n\n  private configureMiddleware(): void {\n    if (!this.app) {\n      return;\n    }\n\n    this.app.use(cors());\n    this.app.use(bodyParser.json({ limit: \"2mb\" }));\n    this.app.use((req, res, next) => {\n      res.header(\"Access-Control-Allow-Origin\", \"*\");\n      res.header(\n        \"Access-Control-Allow-Headers\",\n        \"Origin, X-Requested-With, Content-Type, Accept, X-Wrike-Token\",\n      );\n      res.header(\"Access-Control-Allow-Methods\", \"GET,POST,PUT,DELETE,OPTIONS\");\n      if (req.method === \"OPTIONS\") {\n        res.sendStatus(204);\n        return;\n      }\n      next();\n    });\n\n    if (this.staticRoot && fs.existsSync(this.staticRoot)) {\n      this.app.use(express.static(this.staticRoot));\n    }\n  }\n\n  private configureRoutes(): void {\n    if (!this.app) {\n      return;\n    }\n\n    const router = express.Router();\n\n    router.get(\"/stats\", (_req: Request, res: Response) => {\n      try {\n        const sessions = this.database.getAllSessions();\n        const stats: DashboardStats = {};\n\n        for (const session of sessions) {\n          const date = session.start.substring(0, 10);\n          if (!stats[date]) {\n            stats[date] = {};\n          }\n          if (!stats[date][session.project]) {\n            stats[date][session.project] = {\n              duration: 0,\n              sessions: [],\n            };\n          }\n          const bucket = stats[date][session.project];\n          bucket.duration += this.durationSeconds(session.start, session.end);\n          bucket.sessions.push({\n            start: session.start,\n            end: session.end,\n            type: session.type,\n            file: session.file ?? undefined,\n            host: session.host ?? undefined,\n            url: session.url ?? undefined,\n          });\n        }\n\n        res.json(stats);\n      } catch (error) {\n        console.error(\"CodePulse: failed to build stats\", error);\n        res.status(500).json({ error: \"Failed to load stats\" });\n      }\n    });\n\n    router.get(\"/projects\", (_req, res: Response) => {\n      try {\n        res.json(this.database.getAllActiveProjects());\n      } catch (error) {\n        console.error(\"CodePulse: failed to load projects\", error);\n        res.status(500).json({ error: \"Failed to load projects\" });\n      }\n    });\n\n    router\n      .route(\"/urls\")\n      .get((_req, res: Response) => {\n        try {\n          res.json(this.database.queryAllUrls());\n        } catch (error) {\n          console.error(\"CodePulse: failed to load URLs\", error);\n          res.status(500).json({ error: \"Failed to load URL mappings\" });\n        }\n      })\n      .post((req, res) => {\n        try {\n          const { project, url } = req.body ?? {};\n          if (typeof project !== \"string\") {\n            res.status(400).json({ error: \"Missing project\" });\n            return;\n          }\n          this.database.insertUrl(project, typeof url === \"string\" ? url : null);\n          res.status(201).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to insert URL\", error);\n          res.status(500).json({ error: \"Failed to insert URL\" });\n        }\n      });\n\n    router\n      .route(\"/urls/:id\")\n      .put((req, res) => {\n        try {\n          const id = Number(req.params.id);\n          const { project, url } = req.body ?? {};\n          if (!Number.isFinite(id) || typeof project !== \"string\" || typeof url !== \"string\") {\n            res.status(400).json({ error: \"Invalid payload\" });\n            return;\n          }\n          this.database.updateUrl(id, project, url);\n          res.status(204).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to update URL\", error);\n          res.status(500).json({ error: \"Failed to update URL\" });\n        }\n      })\n      .delete((req, res) => {\n        try {\n          const id = Number(req.params.id);\n          if (!Number.isFinite(id)) {\n            res.status(400).json({ error: \"Invalid identifier\" });\n            return;\n          }\n          this.database.deleteUrlById(id);\n          res.status(204).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to delete URL\", error);\n          res.status(500).json({ error: \"Failed to delete URL\" });\n        }\n      });\n\n    router\n      .route(\"/ignored-projects\")\n      .get((_req, res: Response) => {\n        try {\n          res.json(this.database.getAllIgnoredProjects());\n        } catch (error) {\n          console.error(\"CodePulse: failed to load ignored projects\", error);\n          res.status(500).json({ error: \"Failed to load ignored projects\" });\n        }\n      })\n      .post((req, res) => {\n        try {\n          const { projectName } = req.body ?? {};\n          if (typeof projectName !== \"string\" || !projectName.trim()) {\n            res.status(400).json({ error: \"Missing projectName\" });\n            return;\n          }\n          this.database.insertIgnoredProject(projectName.trim());\n          res.status(201).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to insert ignored project\", error);\n          res.status(500).json({ error: \"Failed to insert ignored project\" });\n        }\n      });\n\n    router.delete(\"/ignored-projects/:id\", (req, res) => {\n      try {\n        const id = Number(req.params.id);\n        if (!Number.isFinite(id)) {\n          res.status(400).json({ error: \"Invalid identifier\" });\n          return;\n        }\n        this.database.deleteIgnoredProject(id);\n        res.status(204).end();\n      } catch (error) {\n        console.error(\"CodePulse: failed to delete ignored project\", error);\n        res.status(500).json({ error: \"Failed to delete ignored project\" });\n      }\n    });\n\n    router\n      .route(\"/project-names\")\n      .get((_req, res: Response) => {\n        try {\n          res.json(this.database.getAllProjectNames());\n        } catch (error) {\n          console.error(\"CodePulse: failed to load project names\", error);\n          res.status(500).json({ error: \"Failed to load project names\" });\n        }\n      })\n      .post((req, res) => {\n        try {\n          const { projectName, customName } = req.body ?? {};\n          if (typeof projectName !== \"string\" || typeof customName !== \"string\") {\n            res.status(400).json({ error: \"Invalid payload\" });\n            return;\n          }\n          this.database.insertProjectName(projectName, customName);\n          res.status(201).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to insert project name\", error);\n          res.status(500).json({ error: \"Failed to insert project name\" });\n        }\n      });\n\n    router\n      .route(\"/project-names/:id\")\n      .put((req, res) => {\n        try {\n          const id = Number(req.params.id);\n          const { customName } = req.body ?? {};\n          if (!Number.isFinite(id) || typeof customName !== \"string\") {\n            res.status(400).json({ error: \"Invalid payload\" });\n            return;\n          }\n          this.database.updateProjectName(id, customName);\n          res.status(204).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to update project name\", error);\n          res.status(500).json({ error: \"Failed to update project name\" });\n        }\n      })\n      .delete((req, res) => {\n        try {\n          const id = Number(req.params.id);\n          if (!Number.isFinite(id)) {\n            res.status(400).json({ error: \"Invalid identifier\" });\n            return;\n          }\n          this.database.deleteProjectName(id);\n          res.status(204).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to delete project name\", error);\n          res.status(500).json({ error: \"Failed to delete project name\" });\n        }\n      });\n\n    router\n      .route(\"/project-clients\")\n      .get((_req, res: Response) => {\n        try {\n          res.json(this.database.getAllProjectClients());\n        } catch (error) {\n          console.error(\"CodePulse: failed to load project clients\", error);\n          res.status(500).json({ error: \"Failed to load project clients\" });\n        }\n      })\n      .post((req, res) => {\n        try {\n          const { projectName, clientName } = req.body ?? {};\n          if (typeof projectName !== \"string\" || typeof clientName !== \"string\") {\n            res.status(400).json({ error: \"Invalid payload\" });\n            return;\n          }\n          this.database.insertProjectClient(projectName, clientName);\n          res.status(201).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to insert project client\", error);\n          res.status(500).json({ error: \"Failed to insert project client\" });\n        }\n      });\n\n    router\n      .route(\"/project-clients/:id\")\n      .put((req, res) => {\n        try {\n          const id = Number(req.params.id);\n          const { clientName } = req.body ?? {};\n          if (!Number.isFinite(id) || typeof clientName !== \"string\") {\n            res.status(400).json({ error: \"Invalid payload\" });\n            return;\n          }\n          this.database.updateProjectClient(id, clientName);\n          res.status(204).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to update project client\", error);\n          res.status(500).json({ error: \"Failed to update project client\" });\n        }\n      })\n      .delete((req, res) => {\n        try {\n          const id = Number(req.params.id);\n          if (!Number.isFinite(id)) {\n            res.status(400).json({ error: \"Invalid identifier\" });\n            return;\n          }\n          this.database.deleteProjectClient(id);\n          res.status(204).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to delete project client\", error);\n          res.status(500).json({ error: \"Failed to delete project client\" });\n        }\n      });\n\n    router\n      .route(\"/commits\")\n      .get((_req, res: Response) => {\n        try {\n          res.json(this.database.getAllCommits());\n        } catch (error) {\n          console.error(\"CodePulse: failed to load commits\", error);\n          res.status(500).json({ error: \"Failed to load commits\" });\n        }\n      })\n      .post((req, res) => {\n        try {\n          const body = req.body ?? {};\n          if (\n            typeof body.project !== \"string\" ||\n            typeof body.commitHash !== \"string\" ||\n            typeof body.commitMessage !== \"string\" ||\n            typeof body.commitTime !== \"string\"\n          ) {\n            res.status(400).json({ error: \"Missing commit payload fields\" });\n            return;\n          }\n          this.database.insertCommit({\n            project: body.project,\n            commitHash: body.commitHash,\n            commitMessage: body.commitMessage,\n            branch: typeof body.branch === \"string\" ? body.branch : null,\n            authorName: typeof body.authorName === \"string\" ? body.authorName : null,\n            authorEmail: typeof body.authorEmail === \"string\" ? body.authorEmail : null,\n            commitTime: body.commitTime,\n            filesChanged: Number(body.filesChanged ?? 0),\n            linesAdded: Number(body.linesAdded ?? 0),\n            linesDeleted: Number(body.linesDeleted ?? 0),\n          });\n          res.status(201).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to insert commit\", error);\n          res.status(500).json({ error: \"Failed to insert commit\" });\n        }\n      });\n\n    router\n      .route(\"/wrike-mappings\")\n      .get((_req, res: Response) => {\n        try {\n          res.json(this.database.getAllWrikeMappings());\n        } catch (error) {\n          console.error(\"CodePulse: failed to load Wrike mappings\", error);\n          res.status(500).json({ error: \"Failed to load Wrike mappings\" });\n        }\n      })\n      .post((req, res) => {\n        try {\n          const { projectName, wrikeProjectId, wrikeProjectTitle, wrikePermalink } = req.body ?? {};\n          if (\n            typeof projectName !== \"string\" ||\n            typeof wrikeProjectId !== \"string\" ||\n            typeof wrikeProjectTitle !== \"string\" ||\n            typeof wrikePermalink !== \"string\"\n          ) {\n            res.status(400).json({ error: \"Invalid payload\" });\n            return;\n          }\n          this.database.insertOrUpdateWrikeMapping({\n            projectName,\n            wrikeProjectId,\n            wrikeTitle: wrikeProjectTitle,\n            wrikePermalink,\n          });\n          res.status(201).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to upsert Wrike mapping\", error);\n          res.status(500).json({ error: \"Failed to upsert Wrike mapping\" });\n        }\n      })\n      .put((req, res) => {\n        try {\n          const { projectName, wrikeProjectId, wrikeProjectTitle, wrikePermalink } = req.body ?? {};\n          if (\n            typeof projectName !== \"string\" ||\n            typeof wrikeProjectId !== \"string\" ||\n            typeof wrikeProjectTitle !== \"string\" ||\n            typeof wrikePermalink !== \"string\"\n          ) {\n            res.status(400).json({ error: \"Invalid payload\" });\n            return;\n          }\n          this.database.insertOrUpdateWrikeMapping({\n            projectName,\n            wrikeProjectId,\n            wrikeTitle: wrikeProjectTitle,\n            wrikePermalink,\n          });\n          res.status(204).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to update Wrike mapping\", error);\n          res.status(500).json({ error: \"Failed to update Wrike mapping\" });\n        }\n      });\n\n    router.delete(\"/wrike-mappings/:id\", (req, res) => {\n      try {\n        const id = Number(req.params.id);\n        if (!Number.isFinite(id)) {\n          res.status(400).json({ error: \"Invalid identifier\" });\n          return;\n        }\n        this.database.deleteWrikeMapping(id);\n        res.status(204).end();\n      } catch (error) {\n        console.error(\"CodePulse: failed to delete Wrike mapping\", error);\n        res.status(500).json({ error: \"Failed to delete Wrike mapping\" });\n      }\n    });\n\n    router\n      .route(\"/meeting-patterns\")\n      .get((_req, res: Response) => {\n        try {\n          res.json(this.database.getAllMeetingPatterns());\n        } catch (error) {\n          console.error(\"CodePulse: failed to load meeting patterns\", error);\n          res.status(500).json({ error: \"Failed to load meeting patterns\" });\n        }\n      })\n      .post((req, res) => {\n        try {\n          const { projectName, urlPattern, meetingTitle, description, autoAssign } = req.body ?? {};\n          if (typeof projectName !== \"string\" || typeof urlPattern !== \"string\") {\n            res.status(400).json({ error: \"Invalid payload\" });\n            return;\n          }\n          this.database.insertOrUpdateMeetingPattern({\n            projectName,\n            urlPattern,\n            meetingTitle: typeof meetingTitle === \"string\" ? meetingTitle : null,\n            description: typeof description === \"string\" ? description : null,\n            autoAssign: autoAssign !== false,\n          });\n          res.status(201).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to upsert meeting pattern\", error);\n          res.status(500).json({ error: \"Failed to upsert meeting pattern\" });\n        }\n      })\n      .put((req, res) => {\n        try {\n          const { projectName, urlPattern, meetingTitle, description, autoAssign } = req.body ?? {};\n          if (typeof projectName !== \"string\" || typeof urlPattern !== \"string\") {\n            res.status(400).json({ error: \"Invalid payload\" });\n            return;\n          }\n          this.database.insertOrUpdateMeetingPattern({\n            projectName,\n            urlPattern,\n            meetingTitle: typeof meetingTitle === \"string\" ? meetingTitle : null,\n            description: typeof description === \"string\" ? description : null,\n            autoAssign: autoAssign !== false,\n          });\n          res.status(204).end();\n        } catch (error) {\n          console.error(\"CodePulse: failed to update meeting pattern\", error);\n          res.status(500).json({ error: \"Failed to update meeting pattern\" });\n        }\n      });\n\n    router.delete(\"/meeting-patterns/:id\", (req, res) => {\n      try {\n        const id = Number(req.params.id);\n        if (!Number.isFinite(id)) {\n          res.status(400).json({ error: \"Invalid identifier\" });\n          return;\n        }\n        this.database.deleteMeetingPattern(id);\n        res.status(204).end();\n      } catch (error) {\n        console.error(\"CodePulse: failed to delete meeting pattern\", error);\n        res.status(500).json({ error: \"Failed to delete meeting pattern\" });\n      }\n    });\n\n    router.post(\"/meeting-patterns/match\", (req, res) => {\n      try {\n        const { url } = req.body ?? {};\n        if (typeof url !== \"string\") {\n          res.status(400).json({ error: \"Missing url\" });\n          return;\n        }\n        const projectName = this.database.findMeetingPattern(url);\n        if (projectName) {\n          res.json({ matched: true, projectName });\n        } else {\n          res.json({ matched: false });\n        }\n      } catch (error) {\n        console.error(\"CodePulse: failed to match meeting pattern\", error);\n        res.status(500).json({ error: \"Failed to match meeting pattern\" });\n      }\n    });\n\n    router.post(\"/license\", async (req, res) => {\n      try {\n        const now = Date.now();\n        const store = this.licenseStore.getState();\n        const licenseKey = req.body?.license_key;\n\n        if (\n          store.isValid &&\n          store.licenseKey === licenseKey &&\n          now - store.lastCheckMillis < 24 * 60 * 60 * 1000\n        ) {\n          res.json({ valid: true, message: store.lastMessage ?? \"License cached\" });\n          return;\n        }\n\n        const result = await this.validateLicense(typeof licenseKey === \"string\" ? licenseKey : \"\");\n        this.licenseStore.update({\n          licenseKey,\n          isValid: result.valid,\n          lastCheckMillis: now,\n          lastMessage: result.message ?? null,\n        });\n\n        res.json(result);\n      } catch (error) {\n        console.error(\"CodePulse: license validation failed\", error);\n        res.status(500).json({ valid: false, message: \"License validation failed\" });\n      }\n    });\n\n    router.post(\"/license/logout\", (_req, res) => {\n      this.licenseStore.clear();\n      res.json({ cleared: true, timestamp: Date.now() });\n    });\n\n    router\n      .route(\"/settings\")\n      .get((_req, res: Response) => {\n        res.json({\n          idleTimeoutMinutes: this.config.idleTimeoutMinutes,\n          storageType: this.config.storageType ?? \"local\",\n        });\n      })\n      .post(async (req, res) => {\n        try {\n          const { idleTimeoutMinutes, storageType } = req.body ?? {};\n          if (typeof idleTimeoutMinutes !== \"number\") {\n            res.status(400).json({ error: \"Missing idleTimeoutMinutes\" });\n            return;\n          }\n\n          const config = vscode.workspace.getConfiguration(\"codepulseTimeTracker\");\n          await config.update(\n            \"idleTimeoutMinutes\",\n            idleTimeoutMinutes,\n            vscode.ConfigurationTarget.Global,\n          );\n          if (typeof storageType === \"string\") {\n            await config.update(\"storageType\", storageType, vscode.ConfigurationTarget.Global);\n          }\n\n          this.config = {\n            ...this.config,\n            idleTimeoutMinutes,\n            storageType:\n              typeof storageType === \"string\" ? storageType : this.config.storageType ?? \"local\",\n          } as TrackerConfiguration;\n\n          res.json({ idleTimeoutMinutes, message: \"Settings saved\" });\n        } catch (error) {\n          console.error(\"CodePulse: failed to save settings\", error);\n          res.status(500).json({ error: \"Failed to save settings\" });\n        }\n      });\n\n    router.get(/^\\/wrike(\\/.*)?$/, async (req, res) => {\n      const token = req.header(\"X-Wrike-Token\");\n      if (!token) {\n        res.status(401).json({ error: \"Missing X-Wrike-Token\" });\n        return;\n      }\n\n      const suffix = req.path.replace(/^\\/wrike/, \"\");\n      const query = req.url.includes(\"?\") ? req.url.substring(req.url.indexOf(\"?\")) : \"\";\n      const targetUrl = `https://www.wrike.com/api/v4${suffix}${query}`;\n\n      try {\n        const response = await fetch(targetUrl, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        const text = await response.text();\n        res.status(response.status).send(text);\n      } catch (error) {\n        console.error(\"CodePulse: Wrike proxy error\", error);\n        res.status(500).json({ error: \"Wrike proxy error\" });\n      }\n    });\n\n    this.app.post(\"/url-track\", (req, res) => {\n      try {\n        const { url, duration, project } = req.body ?? {};\n        if (typeof url !== \"string\" || typeof duration !== \"number\") {\n          res.status(400).json({ error: \"Invalid payload\" });\n          return;\n        }\n\n        try {\n          const parsed = new URL(url);\n          let projectName = this.database.queryProjectByUrl(parsed.host);\n          if (!projectName && typeof project === \"string\" && project.trim()) {\n            projectName = project.trim();\n          }\n\n          if (projectName) {\n            const end = new Date();\n            const start = new Date(end.getTime() - duration * 1000);\n            this.database.insertSession({\n              project: projectName,\n              startIso: start.toISOString(),\n              endIso: end.toISOString(),\n              type: \"browsing\",\n              host: parsed.host,\n              url,\n            });\n          }\n        } catch (error) {\n          console.warn(\"CodePulse: failed to parse URL\", error);\n        }\n\n        res.send(\"OK\");\n      } catch (error) {\n        console.error(\"CodePulse: failed to handle url-track\", error);\n        res.status(500).json({ error: \"Failed to track URL\" });\n      }\n    });\n\n    this.app.use(\"/api\", router);\n\n    this.app.get(\"*\", (_req, res) => {\n      if (this.staticRoot) {\n        const indexPath = path.join(this.staticRoot, \"index.html\");\n        if (fs.existsSync(indexPath)) {\n          res.sendFile(indexPath);\n          return;\n        }\n      }\n      res.status(404).send(\"Not Found\");\n    });\n  }\n\n  private durationSeconds(startIso: string, endIso: string): number {\n    const start = Date.parse(startIso);\n    const end = Date.parse(endIso);\n    if (Number.isNaN(start) || Number.isNaN(end)) {\n      return 0;\n    }\n    return Math.max(0, Math.floor((end - start) / 1000));\n  }\n\n  private async validateLicense(licenseKey: string): Promise<{ valid: boolean; message?: string }> {\n    const trimmed = licenseKey.trim();\n    if (!trimmed) {\n      return { valid: false, message: \"Missing license key\" };\n    }\n\n    const demoKeys = new Set([\"mxo\", \"MXO-DEV-2025\"]);\n    if (demoKeys.has(trimmed)) {\n      return { valid: true, message: \"License key is valid (demo)\" };\n    }\n\n    try {\n      const response = await fetch(\"https://addons.francislabonte.com/api/license/verify/codepulse\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ license_key: trimmed }),\n      });\n      const text = await response.text();\n      try {\n        const json = JSON.parse(text);\n        return {\n          valid: Boolean(json.valid),\n          message: json.message ?? undefined,\n        };\n      } catch {\n        return { valid: false, message: \"Invalid response from license server\" };\n      }\n    } catch (error) {\n      console.error(\"CodePulse: license validation request failed\", error);\n      return { valid: false, message: \"License validation request failed\" };\n    }\n  }\n}\n"]}