{"version":3,"file":"database.js","sourceRoot":"","sources":["../src/database.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ActiveProject,\n  CommitRecord,\n  IgnoredProject,\n  MeetingPattern,\n  ProjectAlias,\n  ProjectClient,\n  SessionRecord,\n  UrlMapping,\n  WrikeMapping,\n} from \"./databaseTypes\";\nimport { JsonDatabaseManager } from \"./databaseJson\";\n\nexport {\n  ActiveProject,\n  CommitRecord,\n  IgnoredProject,\n  MeetingPattern,\n  ProjectAlias,\n  ProjectClient,\n  SessionRecord,\n  UrlMapping,\n  WrikeMapping,\n} from \"./databaseTypes\";\n\ntype InsertSessionParams = {\n  project: string;\n  startIso: string;\n  endIso: string;\n  type: string;\n  file?: string | null;\n  host?: string | null;\n  url?: string | null;\n};\n\ntype InsertCommitParams = {\n  project: string;\n  commitHash: string;\n  commitMessage: string;\n  branch?: string | null;\n  authorName?: string | null;\n  authorEmail?: string | null;\n  commitTime: string;\n  filesChanged: number;\n  linesAdded: number;\n  linesDeleted: number;\n};\n\ntype InsertOrUpdateWrikeParams = {\n  projectName: string;\n  wrikeProjectId: string;\n  wrikeTitle: string;\n  wrikePermalink: string;\n};\n\ntype InsertOrUpdateMeetingPatternParams = {\n  projectName: string;\n  urlPattern: string;\n  meetingTitle?: string | null;\n  description?: string | null;\n  autoAssign?: boolean;\n};\n\ninterface DatabaseBackend {\n  insertSession(params: InsertSessionParams): void;\n  getAllSessions(): SessionRecord[];\n  getSessionsForProject(project: string): SessionRecord[];\n  getSessionsByDateRange(from: string, to: string): SessionRecord[];\n  queryAllUrls(): UrlMapping[];\n  queryProjectByUrl(host: string): string | null;\n  insertUrl(project: string, url?: string | null): void;\n  updateUrl(id: number, project: string, url: string): void;\n  deleteUrlById(id: number): void;\n  removeUrls(project: string): void;\n  getAllIgnoredProjects(): IgnoredProject[];\n  insertIgnoredProject(projectName: string): void;\n  deleteIgnoredProject(id: number): void;\n  getAllProjectNames(): ProjectAlias[];\n  insertProjectName(projectName: string, customName: string): void;\n  updateProjectName(id: number, customName: string): void;\n  deleteProjectName(id: number): void;\n  getAllProjectClients(): ProjectClient[];\n  insertProjectClient(projectName: string, clientName: string): void;\n  updateProjectClient(id: number, clientName: string): void;\n  deleteProjectClient(id: number): void;\n  getAllCommits(): CommitRecord[];\n  getCommitsByDateRange(from: string, to: string): CommitRecord[];\n  insertCommit(params: InsertCommitParams): void;\n  getAllActiveProjects(): ActiveProject[];\n  getAllWrikeMappings(): WrikeMapping[];\n  getWrikeMappingByProject(projectName: string): WrikeMapping | null;\n  insertOrUpdateWrikeMapping(params: InsertOrUpdateWrikeParams): void;\n  deleteWrikeMapping(id: number): void;\n  deleteWrikeMappingByProject(projectName: string): void;\n  insertOrUpdateMeetingPattern(\n    params: InsertOrUpdateMeetingPatternParams,\n  ): void;\n  getAllMeetingPatterns(): MeetingPattern[];\n  deleteMeetingPattern(id: number): void;\n  updateMeetingPatternAutoAssign(id: number, autoAssign: boolean): void;\n  findMeetingPattern(url: string): string | null;\n}\n\ntype SqliteConstructor = new (dbPath?: string) => DatabaseBackend;\n\nlet SqliteDatabaseCtor: SqliteConstructor | null = null;\nlet sqliteBootstrapError: unknown = null;\nlet warnedAboutFallback = false;\n\ntry {\n  // eslint-disable-next-line global-require, @typescript-eslint/no-var-requires\n  const moduleExports = require(\"./databaseSqlite\") as {\n    SqliteDatabaseManager: SqliteConstructor;\n  };\n  SqliteDatabaseCtor = moduleExports.SqliteDatabaseManager;\n} catch (error) {\n  sqliteBootstrapError = error;\n  SqliteDatabaseCtor = null;\n}\n\nexport class DatabaseManager implements DatabaseBackend {\n  private readonly delegate: DatabaseBackend;\n  readonly backend: \"sqlite\" | \"json\";\n\n  constructor(dbPath?: string) {\n    if (SqliteDatabaseCtor) {\n      try {\n        this.delegate = new SqliteDatabaseCtor(dbPath);\n        this.backend = \"sqlite\";\n        return;\n      } catch (error) {\n        this.logFallback(\n          \"Initialising SQLite backend failed, switching to JSON store.\",\n          error,\n        );\n      }\n    } else if (sqliteBootstrapError) {\n      this.logFallback(\n        \"SQLite backend is unavailable, switching to JSON store.\",\n        sqliteBootstrapError,\n      );\n    }\n\n    this.delegate = new JsonDatabaseManager(dbPath);\n    this.backend = \"json\";\n  }\n\n  insertSession(params: InsertSessionParams): void {\n    this.delegate.insertSession(params);\n  }\n\n  getAllSessions(): SessionRecord[] {\n    return this.delegate.getAllSessions();\n  }\n\n  getSessionsForProject(project: string): SessionRecord[] {\n    return this.delegate.getSessionsForProject(project);\n  }\n\n  getSessionsByDateRange(from: string, to: string): SessionRecord[] {\n    return this.delegate.getSessionsByDateRange(from, to);\n  }\n\n  queryAllUrls(): UrlMapping[] {\n    return this.delegate.queryAllUrls();\n  }\n\n  queryProjectByUrl(host: string): string | null {\n    return this.delegate.queryProjectByUrl(host);\n  }\n\n  insertUrl(project: string, url?: string | null): void {\n    this.delegate.insertUrl(project, url);\n  }\n\n  updateUrl(id: number, project: string, url: string): void {\n    this.delegate.updateUrl(id, project, url);\n  }\n\n  deleteUrlById(id: number): void {\n    this.delegate.deleteUrlById(id);\n  }\n\n  removeUrls(project: string): void {\n    this.delegate.removeUrls(project);\n  }\n\n  getAllIgnoredProjects(): IgnoredProject[] {\n    return this.delegate.getAllIgnoredProjects();\n  }\n\n  insertIgnoredProject(projectName: string): void {\n    this.delegate.insertIgnoredProject(projectName);\n  }\n\n  deleteIgnoredProject(id: number): void {\n    this.delegate.deleteIgnoredProject(id);\n  }\n\n  getAllProjectNames(): ProjectAlias[] {\n    return this.delegate.getAllProjectNames();\n  }\n\n  insertProjectName(projectName: string, customName: string): void {\n    this.delegate.insertProjectName(projectName, customName);\n  }\n\n  updateProjectName(id: number, customName: string): void {\n    this.delegate.updateProjectName(id, customName);\n  }\n\n  deleteProjectName(id: number): void {\n    this.delegate.deleteProjectName(id);\n  }\n\n  getAllProjectClients(): ProjectClient[] {\n    return this.delegate.getAllProjectClients();\n  }\n\n  insertProjectClient(projectName: string, clientName: string): void {\n    this.delegate.insertProjectClient(projectName, clientName);\n  }\n\n  updateProjectClient(id: number, clientName: string): void {\n    this.delegate.updateProjectClient(id, clientName);\n  }\n\n  deleteProjectClient(id: number): void {\n    this.delegate.deleteProjectClient(id);\n  }\n\n  getAllCommits(): CommitRecord[] {\n    return this.delegate.getAllCommits();\n  }\n\n  getCommitsByDateRange(from: string, to: string): CommitRecord[] {\n    return this.delegate.getCommitsByDateRange(from, to);\n  }\n\n  insertCommit(params: InsertCommitParams): void {\n    this.delegate.insertCommit(params);\n  }\n\n  getAllActiveProjects(): ActiveProject[] {\n    return this.delegate.getAllActiveProjects();\n  }\n\n  getAllWrikeMappings(): WrikeMapping[] {\n    return this.delegate.getAllWrikeMappings();\n  }\n\n  getWrikeMappingByProject(projectName: string): WrikeMapping | null {\n    return this.delegate.getWrikeMappingByProject(projectName);\n  }\n\n  insertOrUpdateWrikeMapping(params: InsertOrUpdateWrikeParams): void {\n    this.delegate.insertOrUpdateWrikeMapping(params);\n  }\n\n  deleteWrikeMapping(id: number): void {\n    this.delegate.deleteWrikeMapping(id);\n  }\n\n  deleteWrikeMappingByProject(projectName: string): void {\n    this.delegate.deleteWrikeMappingByProject(projectName);\n  }\n\n  insertOrUpdateMeetingPattern(\n    params: InsertOrUpdateMeetingPatternParams,\n  ): void {\n    this.delegate.insertOrUpdateMeetingPattern(params);\n  }\n\n  getAllMeetingPatterns(): MeetingPattern[] {\n    return this.delegate.getAllMeetingPatterns();\n  }\n\n  deleteMeetingPattern(id: number): void {\n    this.delegate.deleteMeetingPattern(id);\n  }\n\n  updateMeetingPatternAutoAssign(id: number, autoAssign: boolean): void {\n    this.delegate.updateMeetingPatternAutoAssign(id, autoAssign);\n  }\n\n  findMeetingPattern(url: string): string | null {\n    return this.delegate.findMeetingPattern(url);\n  }\n\n  private logFallback(message: string, error: unknown): void {\n    if (!warnedAboutFallback) {\n      console.warn(`CodePulse: ${message} Run \"npm run rebuild-native\" inside src/main/vscode to build better-sqlite3 for VS Code. (Extension host ABI ${process.versions.modules ?? 'unknown'})`, error);\n      warnedAboutFallback = true;\n    }\n  }\n}\n"]}