{"version":3,"file":"databaseJson.js","sourceRoot":"","sources":["../src/databaseJson.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from \"fs\";\nimport * as os from \"os\";\nimport * as path from \"path\";\nimport {\n  ActiveProject,\n  CommitRecord,\n  IgnoredProject,\n  MeetingPattern,\n  ProjectAlias,\n  ProjectClient,\n  SessionRecord,\n  UrlMapping,\n  WrikeMapping,\n} from \"./databaseTypes\";\n\ntype CounterKey =\n  | \"sessions\"\n  | \"urls\"\n  | \"ignoredProjects\"\n  | \"projectNames\"\n  | \"projectClients\"\n  | \"commits\"\n  | \"wrikeMappings\"\n  | \"meetingPatterns\";\n\ninterface RawCommitRecord extends CommitRecord {}\n\ninterface RawProjectClient extends ProjectClient {}\n\ninterface RawMeetingPattern extends MeetingPattern {}\n\ninterface RawDatabase {\n  version: number;\n  counters: Record<CounterKey, number>;\n  sessions: SessionRecord[];\n  urls: UrlMapping[];\n  ignoredProjects: IgnoredProject[];\n  projectNames: ProjectAlias[];\n  projectClients: RawProjectClient[];\n  commits: RawCommitRecord[];\n  wrikeMappings: (WrikeMapping & { updatedAt: string })[];\n  meetingPatterns: RawMeetingPattern[];\n}\n\nfunction ensureDir(filePath: string): void {\n  const dir = path.dirname(filePath);\n  if (!fs.existsSync(dir)) {\n    fs.mkdirSync(dir, { recursive: true });\n  }\n}\n\nfunction nowIso(): string {\n  return new Date().toISOString();\n}\n\nconst DEFAULT_DB_PATH = path.join(\n  os.homedir(),\n  \".cache\",\n  \"phpstorm-time-tracker\",\n  \"data.json\",\n);\n\nexport class JsonDatabaseManager {\n  private readonly filePath: string;\n  private data: RawDatabase;\n\n  constructor(dbPath?: string) {\n    this.filePath = this.resolvePath(dbPath);\n    ensureDir(this.filePath);\n    this.data = this.readFile();\n  }\n\n  insertSession(params: {\n    project: string;\n    startIso: string;\n    endIso: string;\n    type: string;\n    file?: string | null;\n    host?: string | null;\n    url?: string | null;\n  }): void {\n    const id = this.nextId(\"sessions\");\n    const record: SessionRecord = {\n      id,\n      project: params.project,\n      date: params.startIso.split(\"T\")[0],\n      start: params.startIso,\n      end: params.endIso,\n      type: params.type,\n      file: params.file ?? null,\n      host: params.host ?? null,\n      url: params.url ?? null,\n    };\n    this.data.sessions.push(record);\n    this.persist();\n  }\n\n  getAllSessions(): SessionRecord[] {\n    return this.sortByDateDesc(this.data.sessions, (session) => session.start);\n  }\n\n  getSessionsForProject(project: string): SessionRecord[] {\n    return this.sortByDateDesc(\n      this.data.sessions.filter((session) => session.project === project),\n      (session) => session.start,\n    );\n  }\n\n  getSessionsByDateRange(from: string, to: string): SessionRecord[] {\n    return this.sortByDateDesc(\n      this.data.sessions.filter(\n        (session) => session.start >= from && session.start <= to,\n      ),\n      (session) => session.start,\n    );\n  }\n\n  queryAllUrls(): UrlMapping[] {\n    return this.data.urls\n      .slice()\n      .sort((a, b) => b.project.localeCompare(a.project));\n  }\n\n  queryProjectByUrl(host: string): string | null {\n    let bestMatch: { project: string; length: number } | null = null;\n    for (const mapping of this.data.urls) {\n      if (!mapping.url) {\n        continue;\n      }\n      if (host.includes(mapping.url)) {\n        const candidateLength = mapping.url.length;\n        if (!bestMatch || candidateLength > bestMatch.length) {\n          bestMatch = { project: mapping.project, length: candidateLength };\n        }\n      }\n    }\n    return bestMatch?.project ?? null;\n  }\n\n  insertUrl(project: string, url?: string | null): void {\n    const id = this.nextId(\"urls\");\n    const record: UrlMapping = {\n      id,\n      project,\n      url: url ?? null,\n    };\n    this.data.urls.push(record);\n    this.persist();\n  }\n\n  updateUrl(id: number, project: string, url: string): void {\n    const mapping = this.data.urls.find((entry) => entry.id === id);\n    if (!mapping) {\n      return;\n    }\n    mapping.project = project;\n    mapping.url = url;\n    this.persist();\n  }\n\n  deleteUrlById(id: number): void {\n    this.data.urls = this.data.urls.filter((entry) => entry.id !== id);\n    this.persist();\n  }\n\n  removeUrls(project: string): void {\n    this.data.urls = this.data.urls.filter((entry) => entry.project !== project);\n    this.persist();\n  }\n\n  getAllIgnoredProjects(): IgnoredProject[] {\n    return this.data.ignoredProjects\n      .slice()\n      .sort((a, b) => b.ignoredAt.localeCompare(a.ignoredAt));\n  }\n\n  insertIgnoredProject(projectName: string): void {\n    const now = nowIso();\n    const existing = this.data.ignoredProjects.find(\n      (entry) => entry.projectName === projectName,\n    );\n    if (existing) {\n      existing.ignoredAt = now;\n    } else {\n      const id = this.nextId(\"ignoredProjects\");\n      this.data.ignoredProjects.push({\n        id,\n        projectName,\n        ignoredAt: now,\n      });\n    }\n    this.persist();\n  }\n\n  deleteIgnoredProject(id: number): void {\n    this.data.ignoredProjects = this.data.ignoredProjects.filter(\n      (entry) => entry.id !== id,\n    );\n    this.persist();\n  }\n\n  getAllProjectNames(): ProjectAlias[] {\n    return this.data.projectNames\n      .slice()\n      .sort((a, b) => a.projectName.localeCompare(b.projectName));\n  }\n\n  insertProjectName(projectName: string, customName: string): void {\n    const existing = this.data.projectNames.find(\n      (entry) => entry.projectName === projectName,\n    );\n    if (existing) {\n      existing.customName = customName;\n    } else {\n      const id = this.nextId(\"projectNames\");\n      this.data.projectNames.push({\n        id,\n        projectName,\n        customName,\n      });\n    }\n    this.persist();\n  }\n\n  updateProjectName(id: number, customName: string): void {\n    const alias = this.data.projectNames.find((entry) => entry.id === id);\n    if (!alias) {\n      return;\n    }\n    alias.customName = customName;\n    this.persist();\n  }\n\n  deleteProjectName(id: number): void {\n    this.data.projectNames = this.data.projectNames.filter(\n      (entry) => entry.id !== id,\n    );\n    this.persist();\n  }\n\n  getAllProjectClients(): ProjectClient[] {\n    return this.data.projectClients\n      .slice()\n      .sort((a, b) => {\n        const clientCompare = a.clientName.localeCompare(b.clientName);\n        if (clientCompare !== 0) {\n          return clientCompare;\n        }\n        return a.projectName.localeCompare(b.projectName);\n      });\n  }\n\n  insertProjectClient(projectName: string, clientName: string): void {\n    const now = nowIso();\n    const existing = this.data.projectClients.find(\n      (entry) => entry.projectName === projectName,\n    );\n    if (existing) {\n      existing.clientName = clientName;\n      existing.updatedAt = now;\n    } else {\n      const id = this.nextId(\"projectClients\");\n      this.data.projectClients.push({\n        id,\n        projectName,\n        clientName,\n        updatedAt: now,\n      });\n    }\n    this.persist();\n  }\n\n  updateProjectClient(id: number, clientName: string): void {\n    const entry = this.data.projectClients.find((client) => client.id === id);\n    if (!entry) {\n      return;\n    }\n    entry.clientName = clientName;\n    entry.updatedAt = nowIso();\n    this.persist();\n  }\n\n  deleteProjectClient(id: number): void {\n    this.data.projectClients = this.data.projectClients.filter(\n      (client) => client.id !== id,\n    );\n    this.persist();\n  }\n\n  getAllCommits(): CommitRecord[] {\n    return this.sortByDateDesc(\n      this.data.commits,\n      (commit) => commit.commitTime,\n    );\n  }\n\n  getCommitsByDateRange(from: string, to: string): CommitRecord[] {\n    return this.sortByDateDesc(\n      this.data.commits.filter(\n        (commit) => commit.commitTime >= from && commit.commitTime <= to,\n      ),\n      (commit) => commit.commitTime,\n    );\n  }\n\n  insertCommit(params: {\n    project: string;\n    commitHash: string;\n    commitMessage: string;\n    branch?: string | null;\n    authorName?: string | null;\n    authorEmail?: string | null;\n    commitTime: string;\n    filesChanged: number;\n    linesAdded: number;\n    linesDeleted: number;\n  }): void {\n    const id = this.nextId(\"commits\");\n    const record: CommitRecord = {\n      id,\n      project: params.project,\n      commitHash: params.commitHash,\n      commitMessage: params.commitMessage,\n      branch: params.branch ?? \"\",\n      authorName: params.authorName ?? \"\",\n      authorEmail: params.authorEmail ?? \"\",\n      commitTime: params.commitTime,\n      filesChanged: params.filesChanged,\n      linesAdded: params.linesAdded,\n      linesDeleted: params.linesDeleted,\n      createdAt: nowIso(),\n    };\n    this.data.commits.push(record);\n    this.persist();\n  }\n\n  getAllActiveProjects(): ActiveProject[] {\n    const lastActivity = new Map<string, string>();\n    for (const session of this.data.sessions) {\n      const current = lastActivity.get(session.project);\n      if (!current || session.end > current) {\n        lastActivity.set(session.project, session.end);\n      }\n    }\n    return Array.from(lastActivity.entries())\n      .sort((a, b) => b[1].localeCompare(a[1]))\n      .map(([name]) => ({ name }));\n  }\n\n  getAllWrikeMappings(): WrikeMapping[] {\n    return this.data.wrikeMappings\n      .slice()\n      .sort((a, b) => a.projectName.localeCompare(b.projectName))\n      .map((mapping) => ({\n        id: mapping.id,\n        projectName: mapping.projectName,\n        wrikeProjectId: mapping.wrikeProjectId,\n        wrikeProjectTitle: mapping.wrikeProjectTitle,\n        wrikePermalink: mapping.wrikePermalink,\n        createdAt: mapping.createdAt,\n      }));\n  }\n\n  getWrikeMappingByProject(projectName: string): WrikeMapping | null {\n    const mapping = this.data.wrikeMappings.find(\n      (entry) => entry.projectName === projectName,\n    );\n    if (!mapping) {\n      return null;\n    }\n    return {\n      id: mapping.id,\n      projectName: mapping.projectName,\n      wrikeProjectId: mapping.wrikeProjectId,\n      wrikeProjectTitle: mapping.wrikeProjectTitle,\n      wrikePermalink: mapping.wrikePermalink,\n      createdAt: mapping.createdAt,\n    };\n  }\n\n  insertOrUpdateWrikeMapping(params: {\n    projectName: string;\n    wrikeProjectId: string;\n    wrikeTitle: string;\n    wrikePermalink: string;\n  }): void {\n    const now = nowIso();\n    const existing = this.data.wrikeMappings.find(\n      (entry) => entry.projectName === params.projectName,\n    );\n    if (existing) {\n      existing.wrikeProjectId = params.wrikeProjectId;\n      existing.wrikeProjectTitle = params.wrikeTitle;\n      existing.wrikePermalink = params.wrikePermalink;\n      existing.updatedAt = now;\n    } else {\n      const id = this.nextId(\"wrikeMappings\");\n      this.data.wrikeMappings.push({\n        id,\n        projectName: params.projectName,\n        wrikeProjectId: params.wrikeProjectId,\n        wrikeProjectTitle: params.wrikeTitle,\n        wrikePermalink: params.wrikePermalink,\n        createdAt: now,\n        updatedAt: now,\n      });\n    }\n    this.persist();\n  }\n\n  deleteWrikeMapping(id: number): void {\n    this.data.wrikeMappings = this.data.wrikeMappings.filter(\n      (entry) => entry.id !== id,\n    );\n    this.persist();\n  }\n\n  deleteWrikeMappingByProject(projectName: string): void {\n    this.data.wrikeMappings = this.data.wrikeMappings.filter(\n      (entry) => entry.projectName !== projectName,\n    );\n    this.persist();\n  }\n\n  insertOrUpdateMeetingPattern(params: {\n    projectName: string;\n    urlPattern: string;\n    meetingTitle?: string | null;\n    description?: string | null;\n    autoAssign?: boolean;\n  }): void {\n    const now = nowIso();\n    const existing = this.data.meetingPatterns.find(\n      (entry) => entry.urlPattern === params.urlPattern,\n    );\n    if (existing) {\n      existing.projectName = params.projectName;\n      existing.meetingTitle = params.meetingTitle ?? null;\n      existing.description = params.description ?? null;\n      existing.autoAssign = params.autoAssign === false ? false : true;\n      existing.updatedAt = now;\n    } else {\n      const id = this.nextId(\"meetingPatterns\");\n      this.data.meetingPatterns.push({\n        id,\n        projectName: params.projectName,\n        urlPattern: params.urlPattern,\n        meetingTitle: params.meetingTitle ?? null,\n        description: params.description ?? null,\n        autoAssign: params.autoAssign === false ? false : true,\n        lastUsed: null,\n        createdAt: now,\n        updatedAt: now,\n      });\n    }\n    this.persist();\n  }\n\n  getAllMeetingPatterns(): MeetingPattern[] {\n    return this.data.meetingPatterns\n      .slice()\n      .sort((a, b) => {\n        const left = (a.lastUsed ?? a.createdAt) ?? \"\";\n        const right = (b.lastUsed ?? b.createdAt) ?? \"\";\n        return right.localeCompare(left);\n      })\n      .map((pattern) => ({\n        id: pattern.id,\n        projectName: pattern.projectName,\n        urlPattern: pattern.urlPattern,\n        meetingTitle: pattern.meetingTitle ?? null,\n        description: pattern.description ?? null,\n        autoAssign: pattern.autoAssign,\n        lastUsed: pattern.lastUsed ?? null,\n        createdAt: pattern.createdAt,\n        updatedAt: pattern.updatedAt,\n      }));\n  }\n\n  deleteMeetingPattern(id: number): void {\n    this.data.meetingPatterns = this.data.meetingPatterns.filter(\n      (entry) => entry.id !== id,\n    );\n    this.persist();\n  }\n\n  updateMeetingPatternAutoAssign(id: number, autoAssign: boolean): void {\n    const entry = this.data.meetingPatterns.find((pattern) => pattern.id === id);\n    if (!entry) {\n      return;\n    }\n    entry.autoAssign = autoAssign;\n    entry.updatedAt = nowIso();\n    this.persist();\n  }\n\n  findMeetingPattern(url: string): string | null {\n    let best: RawMeetingPattern | null = null;\n    for (const pattern of this.data.meetingPatterns) {\n      if (!pattern.autoAssign || !pattern.urlPattern) {\n        continue;\n      }\n      if (url.includes(pattern.urlPattern)) {\n        if (!best || pattern.urlPattern.length > (best.urlPattern?.length ?? 0)) {\n          best = pattern;\n        }\n      }\n    }\n    if (!best) {\n      return null;\n    }\n    best.lastUsed = nowIso();\n    best.updatedAt = best.lastUsed;\n    this.persist();\n    return best.projectName;\n  }\n\n  private resolvePath(dbPath?: string): string {\n    if (!dbPath) {\n      return DEFAULT_DB_PATH;\n    }\n    if (dbPath.endsWith(\".json\")) {\n      return dbPath;\n    }\n    return `${dbPath}.json`;\n  }\n\n  private readFile(): RawDatabase {\n    try {\n      if (fs.existsSync(this.filePath)) {\n        const raw = fs.readFileSync(this.filePath, \"utf8\");\n        const parsed = JSON.parse(raw) as Partial<RawDatabase>;\n        return this.normalize(parsed);\n      }\n    } catch (error) {\n      console.warn(\n        `CodePulse: failed to read JSON database at ${this.filePath}, reinitialising`,\n        error,\n      );\n    }\n    return this.createEmpty();\n  }\n\n  private normalize(input: Partial<RawDatabase>): RawDatabase {\n    const empty = this.createEmpty();\n    return {\n      version: typeof input.version === \"number\" ? input.version : empty.version,\n      counters: {\n        sessions: input.counters?.sessions ?? empty.counters.sessions,\n        urls: input.counters?.urls ?? empty.counters.urls,\n        ignoredProjects:\n          input.counters?.ignoredProjects ?? empty.counters.ignoredProjects,\n        projectNames:\n          input.counters?.projectNames ?? empty.counters.projectNames,\n        projectClients:\n          input.counters?.projectClients ?? empty.counters.projectClients,\n        commits: input.counters?.commits ?? empty.counters.commits,\n        wrikeMappings:\n          input.counters?.wrikeMappings ?? empty.counters.wrikeMappings,\n        meetingPatterns:\n          input.counters?.meetingPatterns ?? empty.counters.meetingPatterns,\n      },\n      sessions: Array.isArray(input.sessions) ? input.sessions : empty.sessions,\n      urls: Array.isArray(input.urls) ? input.urls : empty.urls,\n      ignoredProjects: Array.isArray(input.ignoredProjects)\n        ? input.ignoredProjects\n        : empty.ignoredProjects,\n      projectNames: Array.isArray(input.projectNames)\n        ? input.projectNames\n        : empty.projectNames,\n      projectClients: Array.isArray(input.projectClients)\n        ? input.projectClients\n        : empty.projectClients,\n      commits: Array.isArray(input.commits) ? input.commits : empty.commits,\n      wrikeMappings: Array.isArray(input.wrikeMappings)\n        ? (input.wrikeMappings as RawDatabase[\"wrikeMappings\"])\n        : empty.wrikeMappings,\n      meetingPatterns: Array.isArray(input.meetingPatterns)\n        ? (input.meetingPatterns as RawMeetingPattern[])\n        : empty.meetingPatterns,\n    };\n  }\n\n  private createEmpty(): RawDatabase {\n    return {\n      version: 1,\n      counters: {\n        sessions: 0,\n        urls: 0,\n        ignoredProjects: 0,\n        projectNames: 0,\n        projectClients: 0,\n        commits: 0,\n        wrikeMappings: 0,\n        meetingPatterns: 0,\n      },\n      sessions: [],\n      urls: [],\n      ignoredProjects: [],\n      projectNames: [],\n      projectClients: [],\n      commits: [],\n      wrikeMappings: [],\n      meetingPatterns: [],\n    };\n  }\n\n  private nextId(counter: CounterKey): number {\n    this.data.counters[counter] = (this.data.counters[counter] ?? 0) + 1;\n    return this.data.counters[counter];\n  }\n\n  private persist(): void {\n    try {\n      fs.writeFileSync(\n        this.filePath,\n        JSON.stringify(this.data, null, 2),\n        \"utf8\",\n      );\n    } catch (error) {\n      console.error(\n        `CodePulse: failed to persist JSON database at ${this.filePath}`,\n        error,\n      );\n    }\n  }\n\n  private sortByDateDesc<T>(\n    items: T[],\n    getter: (item: T) => string,\n  ): T[] {\n    return items\n      .slice()\n      .sort((a, b) => getter(b).localeCompare(getter(a)));\n  }\n}\n"]}