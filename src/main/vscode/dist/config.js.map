{"version":3,"file":"config.js","sourceRoot":"","sources":["../src/config.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA,8CAoBC;AAED,sDAQC;AA7CD,+CAAiC;AAajC,MAAM,gBAAgB,GAAG,sBAAsB,CAAC;AAEhD,SAAgB,iBAAiB;IAC/B,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;IACnE,OAAO;QACL,eAAe,EAAE,MAAM,CAAC,GAAG,CAAU,iBAAiB,EAAE,IAAI,CAAC;QAC7D,iBAAiB,EAAE,MAAM,CAAC,GAAG,CAAS,mBAAmB,EAAE,KAAK,CAAC;QACjE,YAAY,EACV,MAAM,CAAC,GAAG,CAAS,cAAc,EAAE,wBAAwB,CAAC;YAC5D,wBAAwB;QAC1B,kBAAkB,EAAE,MAAM,CAAC,GAAG,CAAS,oBAAoB,EAAE,CAAC,CAAC;QAC/D,+BAA+B,EAAE,MAAM,CAAC,GAAG,CACzC,iCAAiC,EACjC,EAAE,CACH;QACD,mBAAmB,EAAE,MAAM,CAAC,GAAG,CAC7B,qBAAqB,EACrB,iBAAiB,CAC6B;QAChD,iBAAiB,EAAE,MAAM,CAAC,GAAG,CAAS,mBAAmB,EAAE,EAAE,CAAC;QAC9D,WAAW,EAAE,MAAM,CAAC,GAAG,CAAS,aAAa,EAAE,OAAO,CAAC,IAAI,OAAO;KACnE,CAAC;AACJ,CAAC;AAED,SAAgB,qBAAqB,CACnC,OAA+C;IAE/C,OAAO,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC,KAAK,EAAE,EAAE;QACzD,IAAI,KAAK,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,EAAE,CAAC;YACjD,OAAO,CAAC,iBAAiB,EAAE,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import * as vscode from \"vscode\";\n\nexport interface TrackerConfiguration {\n  autoStartServer: boolean;\n  trackerServerPort: number;\n  dashboardUrl: string;\n  idleTimeoutMinutes: number;\n  activitySamplingIntervalSeconds: number;\n  projectNameStrategy: \"workspaceFolder\" | \"gitOrigin\" | \"custom\";\n  customProjectName?: string;\n  storageType: string;\n}\n\nconst CONFIG_NAMESPACE = \"codepulseTimeTracker\";\n\nexport function readConfiguration(): TrackerConfiguration {\n  const config = vscode.workspace.getConfiguration(CONFIG_NAMESPACE);\n  return {\n    autoStartServer: config.get<boolean>(\"autoStartServer\", true),\n    trackerServerPort: config.get<number>(\"trackerServerPort\", 56000),\n    dashboardUrl:\n      config.get<string>(\"dashboardUrl\", \"http://localhost:56000\") ??\n      \"http://localhost:56000\",\n    idleTimeoutMinutes: config.get<number>(\"idleTimeoutMinutes\", 2),\n    activitySamplingIntervalSeconds: config.get<number>(\n      \"activitySamplingIntervalSeconds\",\n      60,\n    ),\n    projectNameStrategy: config.get(\n      \"projectNameStrategy\",\n      \"workspaceFolder\",\n    ) as TrackerConfiguration[\"projectNameStrategy\"],\n    customProjectName: config.get<string>(\"customProjectName\", \"\"),\n    storageType: config.get<string>(\"storageType\", \"local\") ?? \"local\",\n  };\n}\n\nexport function onConfigurationChange(\n  handler: (config: TrackerConfiguration) => void,\n): vscode.Disposable {\n  return vscode.workspace.onDidChangeConfiguration((event) => {\n    if (event.affectsConfiguration(CONFIG_NAMESPACE)) {\n      handler(readConfiguration());\n    }\n  });\n}\n"]}